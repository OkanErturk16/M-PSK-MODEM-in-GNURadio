options:
  parameters:
    author: ''
    category: '[GRC Hier Blocks]'
    cmake_opt: ''
    comment: ''
    copyright: ''
    description: ''
    gen_cmake: 'On'
    gen_linking: dynamic
    generate_options: qt_gui
    hier_block_src_path: '.:'
    id: EXP4
    max_nouts: '0'
    output_language: python
    placement: (0,0)
    qt_qss_theme: ''
    realtime_scheduling: ''
    run: 'True'
    run_command: '{python} -u {filename}'
    run_options: prompt
    sizing_mode: fixed
    thread_safe_setters: ''
    title: Not titled yet
    window_size: (1000,1000)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [0, 12.0]
    rotation: 0
    state: enabled

blocks:
- name: n_data
  id: variable
  parameters:
    comment: ''
    value: '256'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [432, 4.0]
    rotation: 0
    state: enabled
- name: n_frame_sync
  id: variable
  parameters:
    comment: ''
    value: '63'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [168, 76.0]
    rotation: 0
    state: enabled
- name: n_time_sync
  id: variable
  parameters:
    comment: ''
    value: '64'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [672, 4.0]
    rotation: 0
    state: enabled
- name: n_zero
  id: variable
  parameters:
    comment: ''
    value: '8'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [296, 76.0]
    rotation: 0
    state: enabled
- name: samp_rate
  id: variable
  parameters:
    comment: ''
    value: '32000'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [296, 12.0]
    rotation: 0
    state: enabled
- name: samp_rate_0
  id: variable
  parameters:
    comment: ''
    value: int(1e6)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [536, 4.0]
    rotation: 0
    state: enabled
- name: M_PSK_EMBED
  id: epy_block
  parameters:
    _source_code: "\nimport numpy as np\nfrom gnuradio import gr\n\n\nclass circBuffer:\n\
      \    def __init__(self, len_max=int(1e6), data_type=np.float32):\n        self.len_max\
      \ = len_max\n        self.data_type = data_type\n        self.buffer = np.zeros(self.len_max,\
      \ dtype=self.data_type)\n        self.RD_ptr = 0\n        self.WRT_ptr = 0\n\
      \        self.elements_in_buffer = 0\n\n    def WRT(self, x):\n        #x: data\
      \ (np.array)\n        len_x = len(x)\n        self.elements_in_buffer += len_x\n\
      \n        if (len_x + self.WRT_ptr) < self.len_max:\n            self.buffer[self.WRT_ptr:(self.WRT_ptr+len_x)]\
      \ = x\n            self.WRT_ptr += len_x\n\n        else:\n            len_x1\
      \ = self.len_max - self.WRT_ptr\n            len_x2 = len_x - len_x1\n     \
      \       self.buffer[-len_x1:] = x[:len_x1]\n            self.buffer[:len_x2]\
      \ = x[len_x1:]\n            self.WRT_ptr = len_x2\n\n    def RD(self, len_x):\n\
      \        self.elements_in_buffer -= len_x\n        if (len_x + self.RD_ptr)\
      \ < self.len_max:\n            x = self.buffer[self.RD_ptr:(self.RD_ptr+len_x)]\n\
      \            self.RD_ptr += len_x\n        else:\n            x = np.zeros(len_x,\
      \ dtype=self.data_type)\n            len_x1 = self.len_max - self.RD_ptr\n \
      \           len_x2 = len_x - len_x1\n\n            x[:len_x1] = self.buffer[-len_x1:]\n\
      \            x[len_x1:] = self.buffer[:len_x2]\n            self.RD_ptr = len_x2\n\
      \        return x\n\n    def is_RD_available(self, len_x):\n        if self.elements_in_buffer\
      \ >= len_x:\n            return True\n        else:\n            return False\n\
      \n    def is_WRT_available(self, x):\n        if (self.len_max - self.elements_in_buffer)\
      \ >= len(x):\n            return True\n        else:\n            return False\n\
      \n    def reset_buffer(self):\n        self.WRT_ptr = self.RD_ptr\n        self.elements_in_buffer\
      \ = 0\n\n    def extend_buffer(self, len_extension):\n        self.buffer =\
      \ np.concatenate((self.buffer[:(self.WRT_ptr+1)], np.zeros(\n            len_extension,\
      \ dtype=self.data_type), self.buffer[(self.WRT_ptr+1):]))\n        if self.WRT_ptr\
      \ < self.RD_ptr:\n            self.RD_ptr += len_extension\n\n\nclass blk(gr.sync_block):\
      \  # other base classes are basic_block, decim_block, interp_block\n\n    def\
      \ __init__(self, m=4, n_symbol=100, n_zero=20, n_time_sync=128, n_frame_sync=63,\
      \ os=4):\n\n        gr.sync_block.__init__(\n            self,\n           \
      \ name=' My M-PSK Modulator',\n            in_sig=[],\n            out_sig=[np.complex64]\n\
      \        )\n\n        self.n_symbol = n_symbol       # number of symbols\n \
      \       self.n_zero = n_zero         # len of zero padding\n        self.n_time_sync\
      \ = n_time_sync    # +-1 alternating sequence length\n        # Zadoff-Chu sequence\
      \ length (odd values are better)\n        self.n_frame_sync = n_frame_sync\n\
      \        self.os = os                   # oversampling FACTOR\n        self.m\
      \ = m                    # bit/symbol\n        self.M = int(2**m)          \
      \  # M of M-PSK\n        self.constellation = np.exp( 1j*2.0*np.pi*np.arange(0,\
      \ self.M)/self.M)  # constellation points\n        \n        # zero padding\
      \ between the transmit pulses\n        self.zero_padding_seq = np.zeros(self.n_zero,\
      \ dtype=np.complex64)\n        self.time_sync_seq = np.tile(np.array([-1, 1],\
      \ dtype=np.complex64), int(n_time_sync/2))\n        self.frame_sync_seq = 1.4414*np.exp(-1j*np.pi*np.arange(self.n_frame_sync)\n\
      \                                     * (np.arange(self.n_frame_sync)+1)/self.n_frame_sync)\n\
      \        self.pilot_seq = 1j*np.array([-1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1,\
      \ 1, -1, 1, -1, 1, -1, 1, -1, 1, -1], dtype=np.complex64)\n        \n      \
      \  # it is predefined and will be used in \"bit_to_symbol_mapper\" method\n\
      \        self.power_list = 2**(np.arange(self.m))[:, np.newaxis]\n        \n\
      \        # the singal not consumed will be stored in this buffer\n        self.signal_buffer\
      \ = circBuffer(int(1e6), data_type=np.complex64)\n\n    def bit_to_symbol_mapper(self,\
      \ B):\n        d = np.sum(B*self.power_list, axis=0)\n        a = self.constellation[d]\n\
      \        return a\n\n    def pulse_train_generator(self, a):\n        data_plus_plot\
      \ = np.concatenate((self.pilot_seq,\n                                      \
      \  a[len(self.pilot_seq):-\n                                        len(self.pilot_seq)],\n\
      \                                        self.pilot_seq))\n\n        a = np.concatenate((self.zero_padding_seq,\n\
      \                            self.time_sync_seq,\n                         \
      \   self.frame_sync_seq,\n                            data_plus_plot))\n\n \
      \       a_os = np.zeros(len(a)*self.os, dtype=np.complex64)\n        a_os[::self.os]\
      \ = a\n        return a_os\n\n    def transmit_signal_generate(self):\n    \
      \    st0 = np.random.get_state()\n        np.random.seed(0)\n        B = np.random.randint(0,\
      \ high=2, size=(self.m, self.n_symbol))\n        np.random.set_state(st0)\n\
      \        a = self.bit_to_symbol_mapper(B)\n        a_os = self.pulse_train_generator(a)\n\
      \        return a_os\n\n    # This is the method triggered by the GNU Radio\
      \ scheduler\n    def work(self, input_items, output_items):\n        len_out\
      \ = len(output_items[0])\n\n        flag = True\n        while flag:\n     \
      \       if not self.signal_buffer.is_RD_available(len_out):\n              \
      \  generated_signal = self.transmit_signal_generate()\n                if self.signal_buffer.is_WRT_available(generated_signal):\n\
      \                    self.signal_buffer.WRT(generated_signal)\n            \
      \    else:\n                    print('Buffer Dolu!')\n            else:\n \
      \               output_items[0][:] = self.signal_buffer.RD(len_out)\n      \
      \          flag = False\n\n        return len(output_items[0])\n"
    affinity: ''
    alias: ''
    comment: ''
    m: '2'
    maxoutbuf: '0'
    minoutbuf: '0'
    n_frame_sync: n_frame_sync
    n_symbol: n_data
    n_time_sync: n_time_sync
    n_zero: n_zero
    os: '8'
  states:
    _io_cache: (' My M-PSK Modulator', 'blk', [('m', '4'), ('n_symbol', '100'), ('n_zero',
      '20'), ('n_time_sync', '128'), ('n_frame_sync', '63'), ('os', '4')], [], [('0',
      'complex', 1)], '', ['m', 'n_frame_sync', 'n_symbol', 'n_time_sync', 'n_zero',
      'os'])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [16, 212.0]
    rotation: 0
    state: enabled
- name: PSF_filter
  id: fir_filter_xxx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    decim: '1'
    maxoutbuf: '0'
    minoutbuf: '0'
    samp_delay: '0'
    taps: myLib.x
    type: ccc
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [480, 244.0]
    rotation: 0
    state: enabled
- name: PSF_filter_0
  id: fir_filter_xxx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    decim: '2'
    maxoutbuf: '0'
    minoutbuf: '0'
    samp_delay: '0'
    taps: myLib.x
    type: ccc
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [568, 708.0]
    rotation: 0
    state: enabled
- name: THALV1_Tagged_stream_receiver_2
  id: THALV1_Tagged_stream_receiver
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    multiplier: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1280, 796.0]
    rotation: 0
    state: enabled
- name: THALV1_correlate_and_tag_0
  id: THALV1_correlate_and_tag
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    n_data: n_data
    n_frame_sync: n_frame_sync
    threshold: '0.5'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1024, 700.0]
    rotation: 0
    state: enabled
- name: THALV1_myer_oerder_cpp_0
  id: THALV1_myer_oerder_cpp
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    n_symbol: '64'
    os: '4'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [784, 708.0]
    rotation: 0
    state: true
- name: THALV1_tagged_stream_trimmer_0
  id: THALV1_tagged_stream_trimmer
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1280, 740.0]
    rotation: 0
    state: enabled
- name: blocks_null_sink_0
  id: blocks_null_sink
  parameters:
    affinity: ''
    alias: ''
    bus_structure_sink: '[[0,],]'
    comment: ''
    num_inputs: '1'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1296, 660.0]
    rotation: 0
    state: true
- name: blocks_tag_gate_0
  id: blocks_tag_gate
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    propagate_tags: 'False'
    single_key: '""'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [384, 876.0]
    rotation: 0
    state: disabled
- name: blocks_throttle_0
  id: blocks_throttle
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    ignoretag: 'False'
    maxoutbuf: '0'
    minoutbuf: '0'
    samples_per_second: '3200000'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [272, 244.0]
    rotation: 0
    state: enabled
- name: channels_channel_model_0
  id: channels_channel_model
  parameters:
    affinity: ''
    alias: ''
    block_tags: 'False'
    comment: ''
    epsilon: 1+20/1e6*1e-5
    freq_offset: 0.0025/8
    maxoutbuf: '0'
    minoutbuf: '0'
    noise_voltage: 0.03*0
    seed: '0'
    taps: '[0,0,0,1,0.]'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [824, 500.0]
    rotation: 0
    state: enabled
- name: channels_fading_model_0
  id: channels_fading_model
  parameters:
    K: '1'
    LOS: 'True'
    N: '8'
    affinity: ''
    alias: ''
    comment: ''
    fDTs: 1/120000/4
    maxoutbuf: '0'
    minoutbuf: '0'
    seed: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [408, 508.0]
    rotation: 0
    state: enabled
- name: freq_xlating_fir_filter_xxx_0
  id: freq_xlating_fir_filter_xxx
  parameters:
    affinity: ''
    alias: ''
    center_freq: '0.25'
    comment: ''
    decim: '1'
    maxoutbuf: '0'
    minoutbuf: '0'
    samp_rate: '1'
    taps: '[1]'
    type: ccc
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [704, 244.0]
    rotation: 0
    state: true
- name: freq_xlating_fir_filter_xxx_0_0
  id: freq_xlating_fir_filter_xxx
  parameters:
    affinity: ''
    alias: ''
    center_freq: '-0.25'
    comment: ''
    decim: '1'
    maxoutbuf: '0'
    minoutbuf: '0'
    samp_rate: '1'
    taps: '[1]'
    type: ccc
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [328, 692.0]
    rotation: 0
    state: true
- name: myLib
  id: epy_module
  parameters:
    alias: ''
    comment: ''
    source_code: '# this module will be imported in the into your flowgraph

      import numpy as np

      from gnuradio.filter import firdes


      os = 8

      rrc_filter_alpha = 0.5

      n_frame_sync     = 127

      MF_len           = 4





      #NRZ filter

      #x = np.ones(os,dtype = np.complex64)/np.sqrt(2)


      #RRC filter

      x = firdes.root_raised_cosine(25, os, 1, rrc_filter_alpha,MF_len*os)

      x = x/np.sqrt(np.sum(np.abs(x)**2))



      # Frame_sync_seq

      frame_sync_seq   = np.exp(-1j*np.pi*np.arange(n_frame_sync)*(np.arange(n_frame_sync)+1)/n_frame_sync)


      # Correlator filter taps

      corr_filter_taps = np.concatenate((np.zeros(n_frame_sync,dtype = np.complex64),np.ones(n_frame_sync,dtype
      = np.complex64)))



      snr_filter_taps = np.ones(8)/8

      '
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [176, 12.0]
    rotation: 0
    state: enabled
- name: note_0
  id: note
  parameters:
    alias: ''
    comment: ''
    note: RECEIVER
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1584, 116.0]
    rotation: 0
    state: true
- name: qtgui_const_sink_x_0
  id: qtgui_const_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    axislabels: 'True'
    color1: '"blue"'
    color10: '"red"'
    color2: '"red"'
    color3: '"red"'
    color4: '"red"'
    color5: '"red"'
    color6: '"red"'
    color7: '"red"'
    color8: '"red"'
    color9: '"red"'
    comment: ''
    grid: 'False'
    gui_hint: ''
    label1: ''
    label10: ''
    label2: ''
    label3: ''
    label4: ''
    label5: ''
    label6: ''
    label7: ''
    label8: ''
    label9: ''
    legend: 'True'
    marker1: '0'
    marker10: '0'
    marker2: '0'
    marker3: '0'
    marker4: '0'
    marker5: '0'
    marker6: '0'
    marker7: '0'
    marker8: '0'
    marker9: '0'
    name: '""'
    nconnections: '1'
    size: '1024'
    style1: '0'
    style10: '0'
    style2: '0'
    style3: '0'
    style4: '0'
    style5: '0'
    style6: '0'
    style7: '0'
    style8: '0'
    style9: '0'
    tr_chan: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: '""'
    type: complex
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    xmax: '2'
    xmin: '-2'
    ymax: '2'
    ymin: '-2'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1280, 868.0]
    rotation: 0
    state: enabled
- name: qtgui_freq_sink_x_0
  id: qtgui_freq_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    average: '1.0'
    axislabels: 'True'
    bw: samp_rate
    color1: '"blue"'
    color10: '"dark blue"'
    color2: '"red"'
    color3: '"green"'
    color4: '"black"'
    color5: '"cyan"'
    color6: '"magenta"'
    color7: '"yellow"'
    color8: '"dark red"'
    color9: '"dark green"'
    comment: ''
    ctrlpanel: 'False'
    fc: '0'
    fftsize: '1024'
    freqhalf: 'True'
    grid: 'False'
    gui_hint: ''
    label: Relative Gain
    label1: ''
    label10: ''''''
    label2: ''''''
    label3: ''''''
    label4: ''''''
    label5: ''''''
    label6: ''''''
    label7: ''''''
    label8: ''''''
    label9: ''''''
    legend: 'True'
    maxoutbuf: '0'
    minoutbuf: '0'
    name: '""'
    nconnections: '1'
    showports: 'False'
    tr_chan: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_tag: '""'
    type: complex
    units: dB
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    wintype: firdes.WIN_BLACKMAN_hARRIS
    ymax: '10'
    ymin: '-140'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [704, 356.0]
    rotation: 0
    state: true
- name: uhd_usrp_sink_0
  id: uhd_usrp_sink
  parameters:
    affinity: ''
    alias: ''
    ant0: TX/RX
    ant1: TX/RX
    ant10: TX/RX
    ant11: TX/RX
    ant12: TX/RX
    ant13: TX/RX
    ant14: TX/RX
    ant15: TX/RX
    ant16: TX/RX
    ant17: TX/RX
    ant18: TX/RX
    ant19: TX/RX
    ant2: TX/RX
    ant20: TX/RX
    ant21: TX/RX
    ant22: TX/RX
    ant23: TX/RX
    ant24: TX/RX
    ant25: TX/RX
    ant26: TX/RX
    ant27: TX/RX
    ant28: TX/RX
    ant29: TX/RX
    ant3: TX/RX
    ant30: TX/RX
    ant31: TX/RX
    ant4: TX/RX
    ant5: TX/RX
    ant6: TX/RX
    ant7: TX/RX
    ant8: TX/RX
    ant9: TX/RX
    bw0: '0'
    bw1: '0'
    bw10: '0'
    bw11: '0'
    bw12: '0'
    bw13: '0'
    bw14: '0'
    bw15: '0'
    bw16: '0'
    bw17: '0'
    bw18: '0'
    bw19: '0'
    bw2: '0'
    bw20: '0'
    bw21: '0'
    bw22: '0'
    bw23: '0'
    bw24: '0'
    bw25: '0'
    bw26: '0'
    bw27: '0'
    bw28: '0'
    bw29: '0'
    bw3: '0'
    bw30: '0'
    bw31: '0'
    bw4: '0'
    bw5: '0'
    bw6: '0'
    bw7: '0'
    bw8: '0'
    bw9: '0'
    center_freq0: '2400000000'
    center_freq1: '0'
    center_freq10: '0'
    center_freq11: '0'
    center_freq12: '0'
    center_freq13: '0'
    center_freq14: '0'
    center_freq15: '0'
    center_freq16: '0'
    center_freq17: '0'
    center_freq18: '0'
    center_freq19: '0'
    center_freq2: '0'
    center_freq20: '0'
    center_freq21: '0'
    center_freq22: '0'
    center_freq23: '0'
    center_freq24: '0'
    center_freq25: '0'
    center_freq26: '0'
    center_freq27: '0'
    center_freq28: '0'
    center_freq29: '0'
    center_freq3: '0'
    center_freq30: '0'
    center_freq31: '0'
    center_freq4: '0'
    center_freq5: '0'
    center_freq6: '0'
    center_freq7: '0'
    center_freq8: '0'
    center_freq9: '0'
    clock_rate: 0e0
    clock_source0: ''
    clock_source1: ''
    clock_source2: ''
    clock_source3: ''
    clock_source4: ''
    clock_source5: ''
    clock_source6: ''
    clock_source7: ''
    comment: ''
    dev_addr: '"name=USB01"'
    dev_args: '"name=USB01"'
    gain0: '0.7'
    gain1: '0'
    gain10: '0'
    gain11: '0'
    gain12: '0'
    gain13: '0'
    gain14: '0'
    gain15: '0'
    gain16: '0'
    gain17: '0'
    gain18: '0'
    gain19: '0'
    gain2: '0'
    gain20: '0'
    gain21: '0'
    gain22: '0'
    gain23: '0'
    gain24: '0'
    gain25: '0'
    gain26: '0'
    gain27: '0'
    gain28: '0'
    gain29: '0'
    gain3: '0'
    gain30: '0'
    gain31: '0'
    gain4: '0'
    gain5: '0'
    gain6: '0'
    gain7: '0'
    gain8: '0'
    gain9: '0'
    len_tag_name: ''
    lo_export0: 'False'
    lo_export1: 'False'
    lo_export10: 'False'
    lo_export11: 'False'
    lo_export12: 'False'
    lo_export13: 'False'
    lo_export14: 'False'
    lo_export15: 'False'
    lo_export16: 'False'
    lo_export17: 'False'
    lo_export18: 'False'
    lo_export19: 'False'
    lo_export2: 'False'
    lo_export20: 'False'
    lo_export21: 'False'
    lo_export22: 'False'
    lo_export23: 'False'
    lo_export24: 'False'
    lo_export25: 'False'
    lo_export26: 'False'
    lo_export27: 'False'
    lo_export28: 'False'
    lo_export29: 'False'
    lo_export3: 'False'
    lo_export30: 'False'
    lo_export31: 'False'
    lo_export4: 'False'
    lo_export5: 'False'
    lo_export6: 'False'
    lo_export7: 'False'
    lo_export8: 'False'
    lo_export9: 'False'
    lo_source0: internal
    lo_source1: internal
    lo_source10: internal
    lo_source11: internal
    lo_source12: internal
    lo_source13: internal
    lo_source14: internal
    lo_source15: internal
    lo_source16: internal
    lo_source17: internal
    lo_source18: internal
    lo_source19: internal
    lo_source2: internal
    lo_source20: internal
    lo_source21: internal
    lo_source22: internal
    lo_source23: internal
    lo_source24: internal
    lo_source25: internal
    lo_source26: internal
    lo_source27: internal
    lo_source28: internal
    lo_source29: internal
    lo_source3: internal
    lo_source30: internal
    lo_source31: internal
    lo_source4: internal
    lo_source5: internal
    lo_source6: internal
    lo_source7: internal
    lo_source8: internal
    lo_source9: internal
    maxoutbuf: '0'
    minoutbuf: '0'
    nchan: '1'
    norm_gain0: 'True'
    norm_gain1: 'False'
    norm_gain10: 'False'
    norm_gain11: 'False'
    norm_gain12: 'False'
    norm_gain13: 'False'
    norm_gain14: 'False'
    norm_gain15: 'False'
    norm_gain16: 'False'
    norm_gain17: 'False'
    norm_gain18: 'False'
    norm_gain19: 'False'
    norm_gain2: 'False'
    norm_gain20: 'False'
    norm_gain21: 'False'
    norm_gain22: 'False'
    norm_gain23: 'False'
    norm_gain24: 'False'
    norm_gain25: 'False'
    norm_gain26: 'False'
    norm_gain27: 'False'
    norm_gain28: 'False'
    norm_gain29: 'False'
    norm_gain3: 'False'
    norm_gain30: 'False'
    norm_gain31: 'False'
    norm_gain4: 'False'
    norm_gain5: 'False'
    norm_gain6: 'False'
    norm_gain7: 'False'
    norm_gain8: 'False'
    norm_gain9: 'False'
    num_mboards: '1'
    otw: ''
    samp_rate: samp_rate
    sd_spec0: ''
    sd_spec1: ''
    sd_spec2: ''
    sd_spec3: ''
    sd_spec4: ''
    sd_spec5: ''
    sd_spec6: ''
    sd_spec7: ''
    show_lo_controls: 'False'
    start_time: '-1.0'
    stream_args: ''
    stream_chans: '[]'
    sync: sync
    time_source0: ''
    time_source1: ''
    time_source2: ''
    time_source3: ''
    time_source4: ''
    time_source5: ''
    time_source6: ''
    time_source7: ''
    type: fc32
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1072, 200.0]
    rotation: 0
    state: disabled
- name: uhd_usrp_source_0
  id: uhd_usrp_source
  parameters:
    affinity: ''
    alias: ''
    ant0: RX2
    ant1: RX2
    ant10: RX2
    ant11: RX2
    ant12: RX2
    ant13: RX2
    ant14: RX2
    ant15: RX2
    ant16: RX2
    ant17: RX2
    ant18: RX2
    ant19: RX2
    ant2: RX2
    ant20: RX2
    ant21: RX2
    ant22: RX2
    ant23: RX2
    ant24: RX2
    ant25: RX2
    ant26: RX2
    ant27: RX2
    ant28: RX2
    ant29: RX2
    ant3: RX2
    ant30: RX2
    ant31: RX2
    ant4: RX2
    ant5: RX2
    ant6: RX2
    ant7: RX2
    ant8: RX2
    ant9: RX2
    bw0: '0'
    bw1: '0'
    bw10: '0'
    bw11: '0'
    bw12: '0'
    bw13: '0'
    bw14: '0'
    bw15: '0'
    bw16: '0'
    bw17: '0'
    bw18: '0'
    bw19: '0'
    bw2: '0'
    bw20: '0'
    bw21: '0'
    bw22: '0'
    bw23: '0'
    bw24: '0'
    bw25: '0'
    bw26: '0'
    bw27: '0'
    bw28: '0'
    bw29: '0'
    bw3: '0'
    bw30: '0'
    bw31: '0'
    bw4: '0'
    bw5: '0'
    bw6: '0'
    bw7: '0'
    bw8: '0'
    bw9: '0'
    center_freq0: '2400000000'
    center_freq1: '0'
    center_freq10: '0'
    center_freq11: '0'
    center_freq12: '0'
    center_freq13: '0'
    center_freq14: '0'
    center_freq15: '0'
    center_freq16: '0'
    center_freq17: '0'
    center_freq18: '0'
    center_freq19: '0'
    center_freq2: '0'
    center_freq20: '0'
    center_freq21: '0'
    center_freq22: '0'
    center_freq23: '0'
    center_freq24: '0'
    center_freq25: '0'
    center_freq26: '0'
    center_freq27: '0'
    center_freq28: '0'
    center_freq29: '0'
    center_freq3: '0'
    center_freq30: '0'
    center_freq31: '0'
    center_freq4: '0'
    center_freq5: '0'
    center_freq6: '0'
    center_freq7: '0'
    center_freq8: '0'
    center_freq9: '0'
    clock_rate: 0e0
    clock_source0: ''
    clock_source1: ''
    clock_source2: ''
    clock_source3: ''
    clock_source4: ''
    clock_source5: ''
    clock_source6: ''
    clock_source7: ''
    comment: ''
    dc_offs_enb0: '""'
    dc_offs_enb1: '""'
    dc_offs_enb10: '""'
    dc_offs_enb11: '""'
    dc_offs_enb12: '""'
    dc_offs_enb13: '""'
    dc_offs_enb14: '""'
    dc_offs_enb15: '""'
    dc_offs_enb16: '""'
    dc_offs_enb17: '""'
    dc_offs_enb18: '""'
    dc_offs_enb19: '""'
    dc_offs_enb2: '""'
    dc_offs_enb20: '""'
    dc_offs_enb21: '""'
    dc_offs_enb22: '""'
    dc_offs_enb23: '""'
    dc_offs_enb24: '""'
    dc_offs_enb25: '""'
    dc_offs_enb26: '""'
    dc_offs_enb27: '""'
    dc_offs_enb28: '""'
    dc_offs_enb29: '""'
    dc_offs_enb3: '""'
    dc_offs_enb30: '""'
    dc_offs_enb31: '""'
    dc_offs_enb4: '""'
    dc_offs_enb5: '""'
    dc_offs_enb6: '""'
    dc_offs_enb7: '""'
    dc_offs_enb8: '""'
    dc_offs_enb9: '""'
    dev_addr: '"name=USB01"'
    dev_args: '"name=USB01"'
    gain0: '10'
    gain1: '0'
    gain10: '0'
    gain11: '0'
    gain12: '0'
    gain13: '0'
    gain14: '0'
    gain15: '0'
    gain16: '0'
    gain17: '0'
    gain18: '0'
    gain19: '0'
    gain2: '0'
    gain20: '0'
    gain21: '0'
    gain22: '0'
    gain23: '0'
    gain24: '0'
    gain25: '0'
    gain26: '0'
    gain27: '0'
    gain28: '0'
    gain29: '0'
    gain3: '0'
    gain30: '0'
    gain31: '0'
    gain4: '0'
    gain5: '0'
    gain6: '0'
    gain7: '0'
    gain8: '0'
    gain9: '0'
    iq_imbal_enb0: '""'
    iq_imbal_enb1: '""'
    iq_imbal_enb10: '""'
    iq_imbal_enb11: '""'
    iq_imbal_enb12: '""'
    iq_imbal_enb13: '""'
    iq_imbal_enb14: '""'
    iq_imbal_enb15: '""'
    iq_imbal_enb16: '""'
    iq_imbal_enb17: '""'
    iq_imbal_enb18: '""'
    iq_imbal_enb19: '""'
    iq_imbal_enb2: '""'
    iq_imbal_enb20: '""'
    iq_imbal_enb21: '""'
    iq_imbal_enb22: '""'
    iq_imbal_enb23: '""'
    iq_imbal_enb24: '""'
    iq_imbal_enb25: '""'
    iq_imbal_enb26: '""'
    iq_imbal_enb27: '""'
    iq_imbal_enb28: '""'
    iq_imbal_enb29: '""'
    iq_imbal_enb3: '""'
    iq_imbal_enb30: '""'
    iq_imbal_enb31: '""'
    iq_imbal_enb4: '""'
    iq_imbal_enb5: '""'
    iq_imbal_enb6: '""'
    iq_imbal_enb7: '""'
    iq_imbal_enb8: '""'
    iq_imbal_enb9: '""'
    lo_export0: 'False'
    lo_export1: 'False'
    lo_export10: 'False'
    lo_export11: 'False'
    lo_export12: 'False'
    lo_export13: 'False'
    lo_export14: 'False'
    lo_export15: 'False'
    lo_export16: 'False'
    lo_export17: 'False'
    lo_export18: 'False'
    lo_export19: 'False'
    lo_export2: 'False'
    lo_export20: 'False'
    lo_export21: 'False'
    lo_export22: 'False'
    lo_export23: 'False'
    lo_export24: 'False'
    lo_export25: 'False'
    lo_export26: 'False'
    lo_export27: 'False'
    lo_export28: 'False'
    lo_export29: 'False'
    lo_export3: 'False'
    lo_export30: 'False'
    lo_export31: 'False'
    lo_export4: 'False'
    lo_export5: 'False'
    lo_export6: 'False'
    lo_export7: 'False'
    lo_export8: 'False'
    lo_export9: 'False'
    lo_source0: internal
    lo_source1: internal
    lo_source10: internal
    lo_source11: internal
    lo_source12: internal
    lo_source13: internal
    lo_source14: internal
    lo_source15: internal
    lo_source16: internal
    lo_source17: internal
    lo_source18: internal
    lo_source19: internal
    lo_source2: internal
    lo_source20: internal
    lo_source21: internal
    lo_source22: internal
    lo_source23: internal
    lo_source24: internal
    lo_source25: internal
    lo_source26: internal
    lo_source27: internal
    lo_source28: internal
    lo_source29: internal
    lo_source3: internal
    lo_source30: internal
    lo_source31: internal
    lo_source4: internal
    lo_source5: internal
    lo_source6: internal
    lo_source7: internal
    lo_source8: internal
    lo_source9: internal
    maxoutbuf: '0'
    minoutbuf: '0'
    nchan: '1'
    norm_gain0: 'False'
    norm_gain1: 'False'
    norm_gain10: 'False'
    norm_gain11: 'False'
    norm_gain12: 'False'
    norm_gain13: 'False'
    norm_gain14: 'False'
    norm_gain15: 'False'
    norm_gain16: 'False'
    norm_gain17: 'False'
    norm_gain18: 'False'
    norm_gain19: 'False'
    norm_gain2: 'False'
    norm_gain20: 'False'
    norm_gain21: 'False'
    norm_gain22: 'False'
    norm_gain23: 'False'
    norm_gain24: 'False'
    norm_gain25: 'False'
    norm_gain26: 'False'
    norm_gain27: 'False'
    norm_gain28: 'False'
    norm_gain29: 'False'
    norm_gain3: 'False'
    norm_gain30: 'False'
    norm_gain31: 'False'
    norm_gain4: 'False'
    norm_gain5: 'False'
    norm_gain6: 'False'
    norm_gain7: 'False'
    norm_gain8: 'False'
    norm_gain9: 'False'
    num_mboards: '1'
    otw: ''
    rx_agc0: Default
    rx_agc1: Default
    rx_agc10: Default
    rx_agc11: Default
    rx_agc12: Default
    rx_agc13: Default
    rx_agc14: Default
    rx_agc15: Default
    rx_agc16: Default
    rx_agc17: Default
    rx_agc18: Default
    rx_agc19: Default
    rx_agc2: Default
    rx_agc20: Default
    rx_agc21: Default
    rx_agc22: Default
    rx_agc23: Default
    rx_agc24: Default
    rx_agc25: Default
    rx_agc26: Default
    rx_agc27: Default
    rx_agc28: Default
    rx_agc29: Default
    rx_agc3: Default
    rx_agc30: Default
    rx_agc31: Default
    rx_agc4: Default
    rx_agc5: Default
    rx_agc6: Default
    rx_agc7: Default
    rx_agc8: Default
    rx_agc9: Default
    samp_rate: samp_rate
    sd_spec0: ''
    sd_spec1: ''
    sd_spec2: ''
    sd_spec3: ''
    sd_spec4: ''
    sd_spec5: ''
    sd_spec6: ''
    sd_spec7: ''
    show_lo_controls: 'False'
    start_time: '-1.0'
    stream_args: ''
    stream_chans: '[0]'
    sync: sync
    time_source0: ''
    time_source1: ''
    time_source2: ''
    time_source3: ''
    time_source4: ''
    time_source5: ''
    time_source6: ''
    time_source7: ''
    type: fc32
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [64, 816.0]
    rotation: 0
    state: disabled
- name: virtual_sink_0
  id: virtual_sink
  parameters:
    alias: ''
    comment: ''
    stream_id: channel_out
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1120, 540.0]
    rotation: 0
    state: enabled
- name: virtual_sink_1
  id: virtual_sink
  parameters:
    alias: ''
    comment: ''
    stream_id: channel_in
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [968, 380.0]
    rotation: 0
    state: true
- name: virtual_source_0
  id: virtual_source
  parameters:
    alias: ''
    comment: ''
    stream_id: channel_out
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [80, 700.0]
    rotation: 0
    state: enabled
- name: virtual_source_1
  id: virtual_source
  parameters:
    alias: ''
    comment: ''
    stream_id: channel_in
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [208, 540.0]
    rotation: 0
    state: true

connections:
- [M_PSK_EMBED, '0', blocks_throttle_0, '0']
- [PSF_filter, '0', freq_xlating_fir_filter_xxx_0, '0']
- [PSF_filter, '0', qtgui_freq_sink_x_0, '0']
- [PSF_filter_0, '0', THALV1_myer_oerder_cpp_0, '0']
- [THALV1_Tagged_stream_receiver_2, '0', qtgui_const_sink_x_0, '0']
- [THALV1_correlate_and_tag_0, '0', blocks_null_sink_0, '0']
- [THALV1_correlate_and_tag_0, '1', THALV1_tagged_stream_trimmer_0, '0']
- [THALV1_myer_oerder_cpp_0, '0', THALV1_correlate_and_tag_0, '0']
- [THALV1_tagged_stream_trimmer_0, '0', THALV1_Tagged_stream_receiver_2, '0']
- [blocks_tag_gate_0, '0', freq_xlating_fir_filter_xxx_0_0, '0']
- [blocks_throttle_0, '0', PSF_filter, '0']
- [channels_channel_model_0, '0', virtual_sink_0, '0']
- [channels_fading_model_0, '0', channels_channel_model_0, '0']
- [freq_xlating_fir_filter_xxx_0, '0', uhd_usrp_sink_0, '0']
- [freq_xlating_fir_filter_xxx_0, '0', virtual_sink_1, '0']
- [freq_xlating_fir_filter_xxx_0_0, '0', PSF_filter_0, '0']
- [uhd_usrp_source_0, '0', blocks_tag_gate_0, '0']
- [virtual_source_0, '0', freq_xlating_fir_filter_xxx_0_0, '0']
- [virtual_source_1, '0', channels_fading_model_0, '0']

metadata:
  file_format: 1
